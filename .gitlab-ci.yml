variables:
  DB: "$DB_NAME"
  HOST: "$DB_HOST"
  LOGIN: "$DB_LOGIN"
  PASSWORD: "$DB_PASSWORD"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

default:
  image: python3:11
  cache:
    key:
      files:
        - requirements.txt
      prefix: ${CI_JOB_NAME}
    paths:
      - .venv
      - .cache/pip
  before_script:
    - python -V               # Print out python version for debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate

stages:
  - build
  - lint
  - test
  - deploy


build:
  stage: build
  script:
    # Устанавливаем зависимости из кэша, если они есть
    - pip install --no-cache-dir --find-links=$PIP_CACHE_DIR --cache-dir=$PIP_CACHE_DIR -r requirements.txt

lint:
  stage: lint
  script:
    # Устанавливаем линтер flake8
    - pip install flake8
    # Запускаем линтер
    - flake8 .

test:
  stage: test
  script:
    # Запускаем main.py
    - python main.py

build_and_push_docker:
  variables:
    CI_VERSION: "1.0.${CI_JOB_ID}"
  image: docker:20.10.16
  stage: deploy
  services:
    - docker:20.10.16-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t "ghcr.io/$CI_REGISTRY_USER/base-pipeline:${CI_COMMIT_SHA:0:8}-$CI_PIPELINE_IID" .
    - docker push "ghcr.io/$CI_REGISTRY_USER/base-pipeline:${CI_COMMIT_SHA:0:8}-$CI_PIPELINE_IID"
