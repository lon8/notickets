name: Python application

on:
  push:
    branches: [ "pipeline", "pipeline_tags" ]
  pull_request:
    branches: [ "main" ]

env:
  DB: ${{ secrets.DB_NAME }}
  HOST: ${{ secrets.DB_HOST }}
  LOGIN: ${{ secrets.DB_LOGIN }}
  PASSWORD: ${{ secrets.DB_PASSWORD }}

permissions:
  contents: read
  packages: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Generate build ID
      id: prep
      run: |
          branch=${GITHUB_REF##*/}
          sha=${GITHUB_SHA::8}
          ts=$(date +%s)
          echo "::set-output name=BUILD_ID::${branch}-${sha}-${ts}"
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - uses: actions/cache@v2
      id: cache-venv  # name for referring later
      with:
        path: ./.venv/  # what we cache: the virtualenv
        # The cache key depends on requirements.txt
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-
    - name: Install dependencies
      if: steps.cache-venv.outputs.cache-hit != 'true'
      run: |  
        python -m venv ./.venv
        source ./.venv/bin/activate
        pip install -r requirements.txt
        pip install flake8 mysqlclient
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        . ./.venv/bin/activate
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test main.py
      run: source ./.venv/bin/activate && python main.py
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push Docker image
      run: |
        docker build . -t ghcr.io/${{ github.repository_owner }}/base-pipeline:${{ github.sha }}-${{ github.run_number }}
        docker push ghcr.io/${{ github.repository_owner }}/base-pipeline:${{ github.sha }}-${{ github.run_number }}